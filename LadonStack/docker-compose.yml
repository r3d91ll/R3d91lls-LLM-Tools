version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - ladon_network

  grafana:
    image: grafana/grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - ./grafana-config:/etc/grafana
      - grafana_data:/var/lib/grafana
    environment:
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    user: "472"
    restart: unless-stopped
    networks:
      - ladon_network

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    pid: "host"
    ports:
      - "${NODE_EXPORTER_PORT}:9100"
    volumes:
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--web.listen-address=:9100'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.netclass.ignored-devices=^(veth.*|docker.*|br-.*|vmnet.*|lo|bonding_masters|cilium_.*)$$'
      - '--no-collector.ipvs'
    networks:
      - ladon_network

  dcgm-exporter:
    image: nvidia/dcgm-exporter:latest
    pid: "host"
    runtime: nvidia
    ports:
      - "${DCGM_EXPORTER_PORT}:9400"
    cap_add:
      - SYS_ADMIN
    volumes:
      - ./default-counters.csv:/etc/dcgm-exporter/default-counters.csv
      - ./custom-counters.csv:/etc/dcgm-exporter/custom-counters.csv
    networks:
      - ladon_network

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ladon_network

  phoenix:
    image: arizephoenix/phoenix:latest
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PHOENIX_SQL_DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
    ports:
      - "${PHOENIX_PORT}:6006"
      - "${PHOENIX_GRPC_PORT}:4317"
      - "${PHOENIX_PROMETHEUS_PORT}:9091"
    volumes:
      - ./phoenix_logs:/app/logs
    working_dir: /phoenix
    entrypoint: ["/usr/bin/python3.11"]
    command: ["-m", "phoenix.server.main", "serve"]
    restart: unless-stopped
    networks:
      - ladon_network

networks:
  ladon_network:
    name: ladon_network
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:
